>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> print(matrix_mul([[1, 2]], [3, 4]))
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4],[5, 6]]))
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> print(matrix_mul([[1, 2], [3, 4]], []))
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> print(matrix_mul([], [[1, 2], [3, 4]]))
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]]))
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "4"]]))
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> print(matrix_mul([[1, 2], [3, 4]]))
Traceback (most recent call last):
    ...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> print(matrix_mul())
Traceback (most recent call last):
    ...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> print(matrix_mul([1, 2], [[3, 4]]))
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

>>> print(matrix_mul([[1, 2], [3, 4]], "me"))
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

>>> print(matrix_mul("me", [[1, 2], [3, 4]]))
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

>>> m_a = [
... [1, 2],
... [3, 4],
... ]
>>> m_b = m_a
>>> print(matrix_mul(m_a, m_b))
[[7, 10], [15, 22]]

>>> m_a = [
... [1, 2],
... [3, 4, 5]
... ]
>>> m_b = m_a
>>> try:
...     print(matrix_mul(m_a, m_b))
... except Exception as e:
...     print(e)
each row of m_a must be of the same size

>>> m_a = [
... [1, 2],
... [3, "4"]
... ]
>>> m_b = [
... [1, 2],
... [3, 4]
... ]
>>> try:
...     print(matrix_mul(m_a, m_b))
... except Exception as e:
...     print(e)
m_a should contain only integers or floats